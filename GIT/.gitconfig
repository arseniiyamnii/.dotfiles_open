[user]
	email = ayamnii@eyeconweb.com
	name = Arsenii Yamnii
[alias]
	lg1 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all
	lg2 = log --graph --abbrev-commit --decorate --format=format:'%C(bold blue)%h%C(reset) - %C(bold cyan)%aD%C(reset) %C(bold green)(%ar)%C(reset)%C(bold yellow)%d%C(reset)%n''					 %C(white)%s%C(reset) %C(dim white)- %an%C(reset)' --all
	files-lc = !git diff-tree --no-commit-id --name-only -r $(git log --format="%H" -n 1)
	files = !echo $(git diff-tree -r --name-only $(git rev-parse --abbrev-ref HEAD) $(git merge-base $(git rev-parse --abbrev-ref HEAD) $(git parent))) | tr ' ' '\n'
	files-c = !git diff-tree --no-commit-id --name-only -r
	recommit = !git add $(git changed-f) && git commit --amend --no-edit --allow-empty
	changed-fc = !echo $(git status -s | grep " M " | sed 's/ M //g' | tr ' ' '\\n')
	new-fc = !echo $(git status -s | grep "?? " | sed 's/?? //g' | tr ' ' '\\n')
	changed-f = !echo $(git status -s | grep " M " | sed 's/ M //g' | tr '\\n' ' ')
	new-f = !echo $(git status -s | grep "?? " | sed 's/?? //g' | tr '\\n' ' ')
	fush = push --force
	acommit = !git add . && git commit
	parent = ! git show-branch -a 2>/dev/null | grep -v "$(git rev-parse --abbrev-ref HEAD)" | head -n 1 | sed 's/.*\\[\\(.*\\)\\].*/\\1/' | sed 's/[\\^~].*//'
	commits = !git --no-pager log --pretty=oneline --no-merges --first-parent $(git parent)..$(git rev-parse --abbrev-ref HEAD)
	commits-num = !git --no-pager log --pretty=oneline --no-merges --first-parent $(git parent)..$(git rev-parse --abbrev-ref HEAD) | wc -l
	log-search = !git --no-pager log --follow -p -- $1 | grep -E '^[commit|Author|\\+|\\-]' > /tmp/gitlog && vim /tmp/gitlog && rm /tmp/gitlog && echo "end"
	gitlink = !git remote show origin | grep URL | head -n 1 | awk -F' ' '{print $4}'
	isre = "!if ! $(git ls-remote --heads $(git gitlink) $(git rev-parse --abbrev-ref HEAD)) 2>/dev/null; then echo true; fi"
	branchname =  rev-parse --abbrev-ref HEAD
	httplink = !git gitlink | cut -c4- | awk -F'\\.|\\:|\\@' '{print \"http://\"$2\".\"$3\"/\"$4}'
	httpbranch = !echo $(git httplink)/-/tree/$(git neightbour)
	neightbour = "!if ! $(git ls-remote --heads $(git gitlink) $(git rev-parse --abbrev-ref HEAD)) 2>/dev/null; then echo $(git branchname); else echo $(git parent); fi"
	goback = "!git checkout $(git parent)"
	branchase = !git rebase -i HEAD~$(git commits-num)
[core]
	excludesFile = ~/.gitignore
[merge]
	tool = vimdiff
[mergetool]
	keepBackup = false
